流程控制：
	对PHP程序执行的过程进行控制！
	PHP有哪些手段对程序执行过程进行控制！
一、顺序执行
	自上而下的执行即可！  对这个执行过程没有控制!
二、分支执行
	分支执行可以根据条件是否满足来选择执行某些代码，PHP的分支执行主要通过两种语句（if，switch）来实现！
	1.if语句
		注意：我们if语句的表达式所控制的代码，最好用花括号括起来，哪怕就是一条语句也用花括号括起来！
			   if语句可以嵌套，这是根据实际需求来的！
		1)单向条件
			if(表达式) 语句1;
			表达式的值为true 那么就执行语句1,否则就不执行！
			$pass=60;
			$a=40;
			if($a>=$pass){
				echo '恭喜，考试通过';
				echo 'dwqdwqdq';
				//.......各种其他语句！
			}
			echo '代码执行结束！';
		2)双向条件
			$pass=60;
			$a=40;
			if($a>=$pass){
				echo '恭喜你！考试通过啦！';
				//.......
			}else{
				echo '很遗憾，您的科目没有通过！';
				//.......
			}
		3)多向条件
			$a=84;
			$grade1=60;//低于60不及格
			$grade2=75;//及格
			$grade3=85;//良好
			if($a<$grade1){
				echo '不及格';
			}elseif($a<$grade2){
				echo '童鞋你及格了';
			}elseif($a<$grade3){
				echo '良好！';
			}else{
				echo '优秀';
			}
	2.switch语句
		switch(表达式){
			case 值 1://case相当于==
				语句块1;
				break;
			case 值 2:
				语句块2;
				break;
			.......
			default:
				语句块n
        }
		
		注意点：
			1)表达式的值最好是整形或者字符串！
			2)不要忘记break语句！来跳出switch语句！每个case语句后面都加上break
			3)如果某个case语句后面并没有接语句块，那么就说明这个语句块的内容是同下！
			4)case后面的语句块是不需要{}括起来的
三、循环执行
	计算机最擅长的功能之一就是按照规定的条件，重复执行某些操作，这是程序设计中最能发挥计算机特长的程序结构。
	1.while语句
		while(表达式){
			各种语句....
		}
		当表达式的值为true,那么就执行下面的语句块，	当语句块执行结束之后，继续返回上面来判断表达式的值是true还是false，如果还是true，那么就继续执行语句块
		知道，这个表达式的值为false，那么这个while语句就执行结束了！
		$i=0;
		while($i<10){
			echo $i++.'<br />';
		}
		echo '执行结束了！';
	2.do...while语句
		do{
			各种语句
		}while(表达式);
		
		与while语句区别就是，do while语句至少会执行一次！
	3.for语句
		for(表达式a;表达式b;表达式c){
			各种语句
		}
		表达式a:会放一些初始化话的语句,$i=0,放多个表达式,中间用,隔开
		表达式b：会放一些用来判断true或者false的表达式！，也可以放多个表达式，中间用,隔开
		表达c：会放一些对初始化的变量进行自增的语句！放多个表达式,中间用,隔开
		
		表达式a
		表达式b 如果是true
		语句块
		表达式c
		表达式b
	
			
			